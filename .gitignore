/pipeline/variables/policy-variables*
/src/acceptanceTest/resources/application-acceptance.yaml
/src/contractTest/resources/application-contract.yaml
/src/functionalTest/resources/application-functional.yaml
/src/smokeTest/resources/application-smoke.yaml
/src/test/resources/application-local.yaml
/src/test/resources/application-test.yaml
/src/integrationTest/resources/application-integration.yaml
/src/snlacceptanceTest/resources/application-snlacceptance.yaml

# Local .terraform directories
**/.terraform

# .tfstate files
*.tfstate
*.tfstate.*

# local tfvars
backend.tfvars

# Crash log files
crash.log
*.hprof

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# ignore VSC
.vscode/

.gradle
build/
/target/
/pacts/
!gradle/wrapper/gradle-wrapper.jar
/node_modules
/infrastructure/.terraform/
**/*.jar
**/*.class
/bin/

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache
yarn.lock
.DS_Store

### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr
.editorconfig
/out/

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/
