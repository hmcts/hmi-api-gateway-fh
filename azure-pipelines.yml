---
trigger:
  - master

parameters:
  - name: environments
    type: object
    default: 
    - name: sbox
      subscription: DTS-SHAREDSERVICES-SBOX
      group: HMI-APIM-BUILD-SBOX
      tests_gradle:
      - name: UnitTest 
        command: clean test
      - name: SmokeTest
        command: clean smoke
        dependsOn: UnitTest
      - name: FunctionalTest
        command: clean functional
        dependsOn: SmokeTest

    - name: dev
      subscription: DTS-SHAREDSERVICES-DEV
      group: HMI-APIM-BUILD-DEV
      tests_gradle:
      - name: UnitTest 
        command: clean test
      - name: SmokeTest
        command: clean smoke
        dependsOn: UnitTest
      - name: FunctionalTest
        command: clean functional
        dependsOn: SmokeTest

    - name: test
      subscription: DTS-SHAREDSERVICES-TEST
      group: HMI-APIM-BUILD-TEST
      condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
      tests_gradle:
      - name: UnitTest 
        command: clean test
      - name: SmokeTest
        command: clean smoke
        dependsOn: UnitTest
      - name: FunctionalTest
        command: clean functional
        dependsOn: SmokeTest

variables:
  - group: HMI-APIM-Common

stages:

- ${{ each environment in parameters.environments }}:

  - stage: ${{ environment.name }}
    ${{ if environment.condition }}:
      condition: ${{ environment.condition }}
    displayName: Build and Test ${{ environment.name }} APIM
    
    jobs:

    - template: pipeline/jobs/terraform.yaml
      parameters:
        subscription: ${{ environment.subscription }} 
        group: ${{ environment.group }}
        displayName: Build infrastructure with Terraform

    - template: pipeline/jobs/create-storage.yaml
      parameters:
        subscription: ${{ environment.subscription }}
        resourceGroup: $[dependencies.Terraform.outputs['terraformOutputs.resourceGroup']]
        storageAccount: $[dependencies.Terraform.outputs['terraformOutputs.storageAccount']]
        dependsOn: Terraform
        displayName: Create Storage

    - ${{ if environment.tests_gradle }}:
      - ${{ each test in environment.tests_gradle }}:

        - template: pipeline/jobs/gradle-test.yaml
          parameters:
            displayName: ${{ test.name }}
            dependsOn: 
            - Terraform
            - ${{ if parameters.dependsOn }}:
              - ${{ parameters.dependsOn }}
            apimHost: hmi-apim-svc-${{ environment.name }}.azure-api.net
            command: ${{ test.command }}
            subscriptionKey: $(subscriptionKey)
            variables: 
              subscriptionKey: $[dependencies.Terraform.outputs['terraformOutputs.subscription_key']]
