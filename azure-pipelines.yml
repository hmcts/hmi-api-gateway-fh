---
trigger:
  - master
pr:
  - none

parameters:
  - name: environments
    type: object
    default:
    - name: sbox
      subscription: DTS-SHAREDSERVICES-SBOX
      group: HMI-APIM-BUILD-SBOX

    - name: dev
      subscription: DTS-SHAREDSERVICES-DEV
      group: HMI-APIM-BUILD-DEV

    - name: test
      subscription: DTS-SHAREDSERVICES-TEST
      group: HMI-APIM-BUILD-TEST

    - name: stg
      subscription: DTS-SHAREDSERVICES-STG
      group: HMI-APIM-BUILD-STG

    - name: prod
      subscription: DTS-SHAREDSERVICES-PROD
      group: HMI-APIM-BUILD-PROD

variables:
  - group: HMI-APIM-Common

stages:
  - stage: Validate
    jobs:
    - ${{ each environment in parameters.environments }}:
      - template: pipeline/jobs/terraform-validate.yaml
        parameters:
          displayName: Validate ${{ environment.name }}
          subscription: ${{ environment.subscription }} 
          group: ${{ environment.group }}
          environment: ${{ environment.name }}

  - stage: PlanSBOX
    dependsOn: Validate
    jobs:
    - template: pipeline/jobs/terraform-plan.yaml
      parameters:
        displayName: Plan SBOX
        subscription: DTS-SHAREDSERVICES-SBOX
        group: HMI-APIM-BUILD-SBOX

  - stage: PlanDEV
    dependsOn: Validate
    jobs:
    - template: pipeline/jobs/terraform-plan.yaml
      parameters:
        displayName: Plan DEV
        subscription: DTS-SHAREDSERVICES-DEV
        group: HMI-APIM-BUILD-DEV

  - stage: PlanTEST
    dependsOn: Validate
    jobs:
    - template: pipeline/jobs/terraform-plan.yaml
      parameters:
        displayName: Plan TEST
        subscription: DTS-SHAREDSERVICES-TEST
        group: HMI-APIM-BUILD-TEST

  - stage: PlanSTG
    dependsOn: Validate
    jobs:
    - template: pipeline/jobs/terraform-plan.yaml
      parameters:
        displayName: Plan STG
        subscription: DTS-SHAREDSERVICES-STG
        group: HMI-APIM-BUILD-STG

  - stage: PlanPROD
    dependsOn: Validate
    jobs:
    - template: pipeline/jobs/terraform-plan.yaml
      parameters:
        displayName: Plan PROD
        subscription: DTS-SHAREDSERVICES-PROD
        group: HMI-APIM-BUILD-PROD

  - stage: BuildSBOX
    dependsOn: PlanSbox
    variables:
      - group: HMI-APIM-BUILD-SBOX
    jobs:
    - template: pipeline/jobs/terraform-apply.yaml
      parameters:
        displayName: Build SBOX
        subscription: DTS-SHAREDSERVICES-SBOX
    - template: pipeline/jobs/apply-policies.yaml
      parameters:
        displayName: Apply API Policies
        subscription: DTS-SHAREDSERVICES-SBOX
        dependsOn: TerraformApply
    - template: pipeline/jobs/remove-default-apis.yaml
      parameters:
        displayName: Remove default APIS
        subscription: DTS-SHAREDSERVICES-SBOX
        dependsOn: TerraformApply
    - template: pipeline/jobs/apply-hostname.yaml
      parameters:
        displayName: Apply Custom Domain Configuration
        dependsOn: TerraformApply

  - stage: BuildDEV
    dependsOn: PlanDev
    variables:
      - group: HMI-APIM-BUILD-DEV
    jobs:
    - template: pipeline/jobs/terraform-apply.yaml
      parameters:
        displayName: Build DEV
        subscription: DTS-SHAREDSERVICES-DEV
    - template: pipeline/jobs/remove-default-apis.yaml
      parameters:
        displayName: Remove default APIS
        subscription: DTS-SHAREDSERVICES-DEV
        dependsOn: TerraformApply
    - template: pipeline/jobs/apply-hostname.yaml
      parameters:
        displayName: Apply Custom Domain Configuration
        dependsOn: TerraformApply

  - stage: BuildTEST
    dependsOn: PlanTest
    variables:
      - group: HMI-APIM-BUILD-TEST
    jobs:
    - template: pipeline/jobs/terraform-apply.yaml
      parameters:
        displayName: Build TEST
        subscription: DTS-SHAREDSERVICES-TEST
    - template: pipeline/jobs/remove-default-apis.yaml
      parameters:
        displayName: Remove default APIS
        subscription: DTS-SHAREDSERVICES-TEST
        dependsOn: TerraformApply
    - template: pipeline/jobs/apply-hostname.yaml
      parameters:
        displayName: Apply Custom Domain Configuration
        dependsOn: TerraformApply

  - stage: TestSBOX
    dependsOn: BuildSbox
    pool:
      vmImage: 'ubuntu-18.04'
    variables:
      - group: HMI-APIM-BUILD-SBOX
    jobs:
      - template: pipeline/jobs/create-storage.yaml
        parameters:
          displayName: Create Storage for Test Results
          subscription: DTS-SHAREDSERVICES-SBOX
      
      - template: pipeline/jobs/export-keyvault.yaml
        parameters:
          displayName: Read APIM Subscription Key
          subscription: DTS-SHAREDSERVICES-SBOX

      - template: pipeline/jobs/test-unit.yaml
        parameters:
          displayName: Unit Test
          dependsOn: 
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-SBOX
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]
            
      - template: pipeline/jobs/test-smoke.yaml
        parameters:
          displayName: Smoke Test
          dependsOn: 
          - UnitTest
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-SBOX
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]

      - template: pipeline/jobs/test-acceptance.yaml
        parameters:
          displayName: Acceptance Test
          dependsOn: 
          - SmokeTest
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-SBOX
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]

      - template: pipeline/jobs/test-contract.yaml
        parameters:
          displayName: Contract Test
          dependsOn: 
          - AcceptanceTest
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-SBOX
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]

      - template: pipeline/jobs/test-functional.yaml
        parameters:
          displayName: Functional Test
          dependsOn: 
          - ContractTest
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-SBOX
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]

      - template: pipeline/jobs/test-codequality.yaml
        parameters:
          displayName: Code Quality Test
      

  - stage: TestDEV
    dependsOn: BuildDev
    pool:
      vmImage: 'ubuntu-18.04'
    variables:
      - group: HMI-APIM-BUILD-DEV
    jobs:
      - template: pipeline/jobs/create-storage.yaml
        parameters:
          displayName: Create Storage for Test Results
          subscription: DTS-SHAREDSERVICES-DEV
      
      - template: pipeline/jobs/export-keyvault.yaml
        parameters:
          displayName: Read APIM Subscription Key
          subscription: DTS-SHAREDSERVICES-DEV

      - template: pipeline/jobs/test-unit.yaml
        parameters:
          displayName: Unit Test
          dependsOn: 
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-DEV
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]
            
      - template: pipeline/jobs/test-smoke.yaml
        parameters:
          displayName: Smoke Test
          dependsOn: 
          - UnitTest
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-DEV
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]

      - template: pipeline/jobs/test-acceptance.yaml
        parameters:
          displayName: Acceptance Test
          dependsOn: 
          - SmokeTest
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-DEV
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]


  - stage: TestTEST
    dependsOn: BuildTest
    pool:
      vmImage: 'ubuntu-18.04'
    variables:
      - group: HMI-APIM-BUILD-TEST
    jobs:
      - template: pipeline/jobs/create-storage.yaml
        parameters:
          displayName: Create Storage for Test Results
          subscription: DTS-SHAREDSERVICES-TEST
      
      - template: pipeline/jobs/export-keyvault.yaml
        parameters:
          displayName: Read APIM Subscription Key
          subscription: DTS-SHAREDSERVICES-TEST

      - template: pipeline/jobs/test-unit.yaml
        parameters:
          displayName: Unit Test
          dependsOn: 
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-TEST
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]
            
      - template: pipeline/jobs/test-smoke.yaml
        parameters:
          displayName: Smoke Test
          dependsOn: 
          - UnitTest
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-TEST
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]

      - template: pipeline/jobs/test-acceptance.yaml
        parameters:
          displayName: Acceptance Test
          dependsOn: 
          - SmokeTest
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-TEST
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]

      - template: pipeline/jobs/test-contract.yaml
        parameters:
          displayName: Contract Test
          dependsOn: 
          - AcceptanceTest
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-TEST
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]

      - template: pipeline/jobs/test-functional.yaml
        parameters:
          displayName: Functional Test
          dependsOn: 
          - ContractTest
          - CreateStorage
          - ExportKeyVault
          subscription: DTS-SHAREDSERVICES-TEST
          subscriptionKey: $(subscriptionKey)
          storageContainer: $(storageContainer)
          variables:
            storageContainer: $[dependencies.CreateStorage.outputs['createContainer.container']]
            subscriptionKey: $[dependencies.ExportKeyVault.outputs['exportKeyVaultSecret.hmi-apim-sub-key']]

      - template: pipeline/jobs/test-codequality.yaml
        parameters:
          displayName: Code Quality Test


  - stage: BuildSTG
    dependsOn: 
      - PlanStg
      - TestSbox
      - TestDev
      - TestTest
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    variables:
      - group: HMI-APIM-BUILD-STG
    jobs:
    - template: pipeline/jobs/terraform-apply.yaml
      parameters:
        displayName: Build STG
        subscription: DTS-SHAREDSERVICES-STG
    - template: pipeline/jobs/remove-default-apis.yaml
      parameters:
        displayName: Remove default APIS
        subscription: DTS-SHAREDSERVICES-STG
        dependsOn: TerraformApply
    - template: pipeline/jobs/apply-hostname.yaml
      parameters:
        displayName: Apply Custom Domain Configuration
        dependsOn: TerraformApply


  - stage: BuildPROD
    dependsOn: 
      - PlanProd
      - BuildStg
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    variables:
      - group: HMI-APIM-BUILD-PROD
    jobs:
    - template: pipeline/jobs/terraform-apply.yaml
      parameters:
        displayName: Build PROD
        subscription: DTS-SHAREDSERVICES-PROD
    - template: pipeline/jobs/remove-default-apis.yaml
      parameters:
        displayName: Remove default APIS
        subscription: DTS-SHAREDSERVICES-PROD
        dependsOn: TerraformApply
    - template: pipeline/jobs/apply-hostname.yaml
      parameters:
        displayName: Apply Custom Domain Configuration
        dependsOn: TerraformApply