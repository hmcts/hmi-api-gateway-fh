---
trigger:
  - none

parameters:
  - name: environment
    displayName: Environment
    type: string
    default: 'sbox'
    values:
      - sbox
      - test

variables:
  - group: HMI-APIM-Common
  - ${{ if eq(parameters.environment, 'sbox') }}:
    - group: HMI-APIM-BUILD-SBOX
  - ${{ if eq(parameters.environment, 'test') }}:
    - group: HMI-APIM-BUILD-TEST

resources:
  containers:
  - container: owasp_zap_container
    image: hmi/apim-tests-owasp:latest
    endpoint: 'DTS-SS-ACRPrivate'
    options: --user 0:0
    ports:
    - 80:80
    volumes:
    - /zap/wrk:/zap/wrk:rw

  # - container: wiremock_container
  #   image: hmi/apim-tests-wiremock:latest
  #   endpoint: 'DTS-SS-ACRPrivate'
  #   options: --user 0:0
  #   ports:
  #   - 8080:8080


stages:

  - stage: TEST
    displayName: Create ACR Images
    jobs:
      - job: BuildACRimage
        pool:
          vmImage: 'ubuntu-latest'

        steps:
        - template: pipeline/steps/push-img.yaml
          parameters:
            registry: 'DTS-SS-ACRPrivate'
            repository: 'hmi/apim-tests-owasp'
            dockerfile: 'pipeline/tests/owasp/Dockerfile'
            tags: |
              latest

        # - template: pipeline/steps/push-img.yaml
        #   parameters:
        #     registry: 'DTS-SS-ACRPrivate'
        #     repository: 'hmi/apim-tests-wiremock'
        #     dockerfile: 'pipeline/tests/wiremock/Dockerfile'
        #     tags: |
        #       latest

  - stage: OWASP
    displayName: Tests - OWASP
    jobs:
      - job: containerjob
        pool:
          vmImage: 'ubuntu-latest'
        container: owasp_zap_container
        steps:
        - script: |
            zap-api-scan.py -t https://www.example.com/openapi.json -f openapi -x report_xml

  # - stage: WIREMOCK
  #   displayName: Tests - Wiremock
  #   jobs:
  #     - job: containerjob
  #       pool:
  #         vmImage: 'ubuntu-16.04'
  #       container: wiremock_container
  #       steps:
  #       - script: ls