---
trigger:
  - master

parameters:
  - name: environments
    type: object
    default: 
    - name: sbox
      subscription: DTS-SHAREDSERVICES-SBOX
      group: HMI-APIM-BUILD-SBOX
      tests_gradle:
      - name: UnitTest 
        command: clean test
      - name: SmokeTest
        command: clean smoke
        dependsOn: UnitTest
      - name: FunctionalTest
        command: clean functional
        dependsOn: SmokeTest

    - name: test
      subscription: DTS-SHAREDSERVICES-TEST
      group: HMI-APIM-BUILD-TEST
      condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
      tests_gradle:
      - name: UnitTest 
        command: clean test
      - name: SmokeTest
        command: clean smoke
        dependsOn: UnitTest
      - name: FunctionalTest
        command: clean functional
        dependsOn: SmokeTest

variables:
  - group: HMI-APIM-Common

resources:
  containers:
  - container: owasp_zap_container
    image: hmi/apim-tests-owasp:latest
    endpoint: 'DTS-SS-ACRPrivate'
    options: --user 0:0
    ports:
    - 80:80
    volumes:
    - /home/vsts/work/1:/zap/wrk:rw

stages:

  - stage: TEST
    displayName: Create ACR Images
    jobs:
      - job: BuildACRimage
        pool:
          vmImage: 'ubuntu-latest'

        steps:
        - template: pipeline/steps/push-img.yaml
          parameters:
            registry: 'DTS-SS-ACRPrivate'
            repository: 'hmi/apim-tests-owasp'
            dockerfile: 'pipeline/tests/owasp/Dockerfile'
            tags: |
              latest

        - template: pipeline/steps/push-img.yaml
          parameters:
            registry: 'DTS-SS-ACRPrivate'
            repository: 'hmi/azure-devops-agent'
            dockerfile: 'docker/images/azuredevops-agent/Dockerfile'
            tags: |
              latest

  # - stage: OWASP
  #   displayName: Tests - OWASP
  #   jobs:
  #     - job: containerjob
  #       pool:
  #         name: shared-services-pool
  #       container: owasp_zap_container
  #       steps:
  #       - script: |
  #           echo "Initiating Scan"
  #           zap-api-scan.py -t https://www.example.com/openapi.json -f openapi
  #           echo "Finished Scan"
