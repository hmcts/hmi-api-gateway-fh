---
trigger:
  - master

parameters:
  - name: environments
    type: object
    default: 
    - name: sbox
      subscription: DTS-SHAREDSERVICES-SBOX
      group: HMI-APIM-BUILD-SBOX
      tests_gradle:
      - name: UnitTest 
        command: clean test
      - name: SmokeTest
        command: clean smoke
        dependsOn: UnitTest
      - name: FunctionalTest
        command: clean functional
        dependsOn: SmokeTest

    - name: test
      subscription: DTS-SHAREDSERVICES-TEST
      group: HMI-APIM-BUILD-TEST
      condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
      tests_gradle:
      - name: UnitTest 
        command: clean test
      - name: SmokeTest
        command: clean smoke
        dependsOn: UnitTest
      - name: FunctionalTest
        command: clean functional
        dependsOn: SmokeTest

variables:
  - group: HMI-APIM-Common
  - group: HMI-APIM-BUILD-SBOX

stages:

  # - stage: TEST
  #   displayName: Create ACR Images
  #   jobs:
  #     - job: BuildACRimage
  #       pool:
  #         vmImage: 'ubuntu-latest'

  #       steps:
  #       - template: pipeline/steps/push-img.yaml
  #         parameters:
  #           registry: 'DTS-SS-ACRPrivate'
  #           repository: 'hmi/apim-tests-owasp'
  #           dockerfile: 'pipeline/tests/owasp/Dockerfile'
  #           tags: |
  #             v0.1


  - stage: OWASP
    displayName: Tests - OWASP
    jobs:
      - job: containerjob
        pool:
          vmImage: 'ubuntu-latest'

        steps:

        - task: Docker@1
          displayName: 'Run an image'
          inputs:
            azureSubscriptionEndpoint: 'DTS-SHAREDSERVICES-SBOX'
            azureContainerRegistry: ssprivatesbox.azurecr.io
            command: 'Run an image'
            imageName: 'ssprivatesbox.azurecr.io/hmi/apim-tests-owasp:v0.1'
            volumes: '/home/vsts/work/:/zap/wrk/:rw'
            envVars: |
              TEST_URL=https://www.example.com/openapi.json
              SecurityRules=https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf
            containerCommand: '/bin/bash ./security.sh'
            runInBackground: false
        
        - script: |
            ls /home/vsts/work/1
            cat /home/vsts/work/1/report.json