---
trigger:
  - master
pr:
  - none

parameters:
  - name: environments
    type: object
    default:
    - name: sbox
      subscription: DTS-SHAREDSERVICES-SBOX
      group: HMI-APIM-BUILD-SBOX
      pool: hmi-pool
      custom_domain: hmi-apim.sandbox.platform.hmcts.net
      tests_gradle:
      - name: UnitTest
        command: test
        logLevel: info
        serenity: true
      - name: SmokeTest
        command: smoke
        logLevel: debug
        serenity: false
        dependsOn: UnitTest
      - name: AcceptanceTest
        command: acceptance
        logLevel: debug
        serenity: false
        dependsOn: SmokeTest
      - name: FunctionalTest
        command: functional
        logLevel: info
        serenity: true
        dependsOn: AcceptanceTest
      tests_sonarcloud:
      - name: CodeQualityTest
        command: sonarqube

    - name: dev
      subscription: DTS-SHAREDSERVICES-DEV
      group: HMI-APIM-BUILD-DEV
      pool: hmi-dev
      custom_domain: hmi-apim.preview.platform.hmcts.net
      tests_gradle:
      - name: UnitTest
        command: test
        logLevel: info
        serenity: true
      - name: SmokeTest
        command: smoke
        logLevel: debug
        serenity: false
        dependsOn: UnitTest
      - name: AcceptanceTest
        command: acceptance
        logLevel: debug
        serenity: false
        dependsOn: SmokeTest

    - name: test
      subscription: DTS-SHAREDSERVICES-TEST
      group: HMI-APIM-BUILD-TEST
      pool: hmi-test
      custom_domain: hmi-apim.perftest.platform.hmcts.net
      condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
      tests_gradle:
      - name: UnitTest
        command: test
        logLevel: info
        serenity: true
      - name: SmokeTest
        command: smoke
        logLevel: debug
        serenity: false
        dependsOn: UnitTest
      - name: AcceptanceTest
        command: acceptance
        logLevel: debug
        serenity: false
        dependsOn: SmokeTest
      - name: FunctionalTest
        command: functional
        logLevel: info
        serenity: true
        dependsOn: AcceptanceTest
      tests_sonarcloud:
      - name: CodeQualityTest
        command: sonarqube


variables:
  - group: HMI-APIM-Common

stages:

- ${{ each environment in parameters.environments }}:

  - stage: ${{ environment.name }}
    ${{ if environment.condition }}:
      condition: ${{ environment.condition }}
    displayName: Build and Test ${{ environment.name }} APIM
    jobs:

    - template: pipeline/jobs/terraform.yaml
      parameters:
        displayName: Build infrastructure with Terraform
        subscription: ${{ environment.subscription }} 
        group: ${{ environment.group }}

    - template: pipeline/jobs/remove-default-apis.yaml
      parameters:
        displayName: Remove default APIS
        subscription: ${{ environment.subscription }}
        environment: ${{ environment.name }}
        dependsOn: Terraform

    - template: pipeline/jobs/apply-hostname.yaml
      parameters:
        subscription: ${{ environment.subscription }}
        displayName: Apply Custom Domain Configuration
        dependsOn: Terraform
        resourceGroup: $(resourceGroup)
        keyVault: hmi-shared-kv-${{ environment.name }}
        hostName: ${{ environment.custom_domain }}
        variables:
          resourceGroup: $[dependencies.Terraform.outputs['terraformOutput.resourceGroup']]

    - ${{ if environment.tests_gradle }}:
      - template: pipeline/jobs/create-storage.yaml
        parameters:
          displayName: Create Storage for Test Results
          subscription: ${{ environment.subscription }}
          dependsOn: Terraform
          resourceGroup: $(resourceGroup)
          storageAccount: $(storageAccount)
          variables:
            resourceGroup: $[dependencies.Terraform.outputs['terraformOutput.resourceGroup']]
            storageAccount: $[dependencies.Terraform.outputs['terraformOutput.storageAccount']]

    - ${{ if environment.tests_gradle }}:
      - ${{ each test in environment.tests_gradle }}:
        - template: pipeline/jobs/gradle-test.yaml
          parameters:
            displayName: ${{ test.name }}
            dependsOn:
            - Terraform
            - createStorage
            - ApplyHostName
            - ${{ if test.dependsOn }}:
              - ${{ test.dependsOn }}
            serenity: ${{ test.serenity }}
            subscription: ${{ environment.subscription }}
            apimHost: ${{ environment.custom_domain }}
            command: ${{ test.command }}
            logLevel: ${{ test.logLevel }}
            subscriptionKey: $(subscriptionKey)
            resourceGroup: $(resourceGroup)
            storageAccount: $(storageAccount)
            storageContainer: $(storageContainer)
            variables:
              subscriptionKey: $[dependencies.Terraform.outputs['terraformOutput.subscriptionKey']]
              resourceGroup: $[dependencies.Terraform.outputs['terraformOutput.resourceGroup']]
              storageAccount: $[dependencies.Terraform.outputs['terraformOutput.storageAccount']]
              storageContainer: $[dependencies.createStorage.outputs['createContainer.container']]

    - ${{ if environment.tests_security }}:
      - ${{ each test in environment.tests_security }}:
        - ${{ each url in test.testUrl }}:
          - template: pipeline/jobs/security-test.yaml
            parameters:
              displayName: ${{ url.name }}
              dependsOn:
              - Terraform
              - createStorage
              - ApplyHostName
              subscription: ${{ environment.subscription }}
              registry: ${{ environment.registry }}
              repository: ${{ test.repository }}
              containerRegistry: ${{ test.containerRegistry }}
              dockerfile: docker/images/${{ test.name }}/Dockerfile
              tags: latest
              testUrl: ${{ url.target }}
              securityRules: https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf
              resourceGroup: $(resourceGroup)
              storageAccount: $(storageAccount)
              storageContainer: $(storageContainer)
              variables:
                resourceGroup: $[dependencies.Terraform.outputs['terraformOutput.resourceGroup']]
                storageAccount: $[dependencies.Terraform.outputs['terraformOutput.storageAccount']]
                storageContainer: $[dependencies.createStorage.outputs['createContainer.container']]
    
    - ${{ if environment.tests_sonarcloud }}:
      - ${{ each test in environment.tests_sonarcloud }}:
        - template: pipeline/jobs/sonarqube-test.yaml
          parameters:
            displayName: ${{ test.name }}
            dependsOn:
            - UnitTest
            - SmokeTest
            - AcceptanceTest
            - FunctionalTest
            subscription: ${{ environment.subscription }}
            command: ${{ test.command }}
