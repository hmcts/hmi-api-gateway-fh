---
trigger:
  - none

parameters:
  - name: environments
    type: object
    default: 
    - name: sbox
      subscription: DTS-SHAREDSERVICES-SBOX
      group: HMI-APIM-BUILD-SBOX
      registry: DTS-SS-PRIVATE-SBOX
      tests_gradle:
      - name: UnitTest
        command: test
        logLevel: info
        serenity: true
      - name: SmokeTest
        command: smoke
        logLevel: debug
        serenity: false
        dependsOn: UnitTest
      - name: AcceptanceTest
        command: acceptance
        logLevel: debug
        serenity: false
        dependsOn: SmokeTest
      - name: FunctionalTest
        command: functional
        logLevel: info
        serenity: true
        dependsOn: AcceptanceTest
      tests_security:
      - name: ApiZapScan
        containerRegistry: ssprivatesbox.azurecr.io
        repository: hmi/apim-tests-owasp
        testUrl:
        - name: API1
          target: https://www.example.com/openapi.json
        - name: API2
          target: https://www.example.com/openapitest1.json
        - name: API3
          target: https://www.example.com/openapitest2.json


jobs:
  - job: "echo"
    steps:
    - script: |
        echo Build.SourceVersion $(Build.SourceVersion)
        echo Build.Repository.Git.SubmoduleCheckout $(Build.Repository.Git.SubmoduleCheckout)
        echo Build.DefinitionName $(Build.DefinitionName)
        echo Build.Reason $(Build.Reason)
        echo Build.Repository.LocalPath $(Build.Repository.LocalPath)
        ls $(Build.Repository.LocalPath)/infrastructure/template/
        echo ""
        cat $(Build.Repository.LocalPath)/infrastructure/template/api-op-health-check-policy.xml
        echo Build.Repository.Name $(Build.Repository.Name)
        echo Build.SourceBranch $(Build.SourceBranch)
        echo Build.SourceBranchName $(Build.SourceBranchName)
        echo Build.SourcesDirectory $(Build.SourcesDirectory)
        ls $(Build.SourcesDirectory)/infrastructure/template/
        echo ""
        cat $(Build.SourcesDirectory)/infrastructure/template/api-op-health-check-policy.xml
        echo Build.TriggeredBy.DefinitionName $(Build.TriggeredBy.DefinitionName)
        echo ""
        ls /home/vsts/work/1/s/infrastructure/template/

- ${{ each environment in parameters.environments }}:
  - ${{ if environment.tests_security }}:
    - ${{ each test in environment.tests_security }}:
      - $ {{ each url in test.testUrl }}:
        - job: ${{ url.name }}
          steps:
          - script: |
              echo ${{ url.target }}
