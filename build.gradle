buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.83")
        classpath("net.serenity-bdd:serenity-single-page-report:2.1.4")
    }
}

plugins {
    id 'application'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'org.owasp.dependencycheck' version '5.3.2.1'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'org.sonarqube' version '3.0'
    id 'au.com.dius.pact' version '4.0.10'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'

group = 'uk.gov.hmcts.futurehearings'
version = '0.0.1'

defaultTasks 'clean', 'test', 'aggregate'

allprojects {
    sourceCompatibility = '11'
    targetCompatibility = '11'
}


sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources {
            srcDir file('src/functionalTest/resources')
        }
    }

    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contactTest/resources')
    }

    acceptanceTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/acceptanceTest/java')
        }
        resources.srcDir file('src/acceptanceTest/resources')
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    functionalTestCompile.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime
    contractTestCompile.extendsFrom testCompile
    contractTestRuntime.extendsFrom testRuntime
    acceptanceTestCompile.extendsFrom testCompile
    acceptanceTestRuntime.extendsFrom testRuntime
}


test {
    description = "Runs unit tests"
    group = 'Delivery pipeline'
    description = 'Executes unit tests'
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    include "uk/gov/hmcts/futurehearings/hmi/unit/testing/testsuites/**"
    failFast = false
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)


task functional(type: Test) {

    description = "Runs functional tests"
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    include "uk/gov/hmcts/futurehearings/hmi/functional/hearing/**"
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")

    enableAssertions = true
    scanForTestClasses = true

    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

// Serenity Reporting
functional.finalizedBy(aggregate)

task integration(type: Test) {
    description = "Runs integration tests"
    group = "Verification"
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    failFast = true
    include "uk/gov/hmcts/futurehearings/hmi/integration/hearing/**"
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task smoke(type: Test) {
    description = "Runs Smoke Tests"
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
    include "uk/gov/hmcts/futurehearings/hmi/smoke/**"
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")

    enableAssertions = true
    scanForTestClasses = true
}

task contract(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/futurehearings/hmi/contract/consumer/**"
    systemProperty 'pact.rootDir', "pacts"
    systemProperties System.getProperties()
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task acceptance(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the QA Acceptance tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
    classpath = sourceSets.acceptanceTest.runtimeClasspath
    include "uk/gov/hmcts/futurehearings/hmi/acceptance/**"
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
    enableAssertions = true
    scanForTestClasses = true
}

task runAndPublishConsumerPactTests(type: Test) {
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath

}

runAndPublishConsumerPactTests.finalizedBy pactPublish

checkstyle {
    maxWarnings = 0
    toolVersion = '8.29'
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
    toolVersion = "6.18.0"
    sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
    reportsDir = file("$project.buildDir/reports/pmd")
    // https://github.com/pmd/pmd/issues/876
    ruleSets = []
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "HMI :: Hearing Management Interface API"
        property "sonar.projectKey", "HMIAPI"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "hmcts"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java,src/smokeTest/java,src/acceptanceTest/java,src/contractTest/java,src/functionalTest/java"
        property "sonar.login", project.gradle.startParameter.projectProperties.get("sonar.login")
    }
}
project.tasks['sonarqube'].group = "Verification"

// before committing a change, make sure task still works
dependencyUpdates {
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+$/
        return !stableKeyword && !(version ==~ regex)
    }
    rejectVersionIf { selection -> // <---- notice how the closure argument is named
        return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'config/owasp/suppressions.xml'

    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

dependencyManagement {
    dependencies {
        dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.66'
        // CVE-2018-10237 - Unbounded memory allocation
        dependencySet(group: 'com.google.guava', version: '29.0-jre') {
            entry 'guava'
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}



def versions = [
        junit           : '5.6.2',
        junitPlatform   : '1.6.2',
        reformLogging   : '5.1.7',
        springBoot      : springBoot.class.package.implementationVersion,
        springfoxSwagger: '2.9.2',
        pact_version    : '3.6.15',
        serenity        : '2.2.9',
        restAssured     : '4.2.0',
        serenityreporter: '2.1.4',
        assertJ         : '3.8.0',
        logbackVersion  : '1.2.3'
]

ext.libraries = [
        junit5: [
                "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
                "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
                "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
                "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
                "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
        ]
]

ext {
    slf4jVersion = '1.7.7'
    serenityCoreVersion = '2.2.9'
    junitVersion = '4.13'
    assertJVersion = '3.8.0'
    logbackVersion = '1.2.3'
}

dependencies {

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger

    implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.3.RELEASE'
    implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.13.3'

    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.37'
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '9.0.37'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    compileOnly 'org.projectlombok:lombok:1.18.12'

    compile "ch.qos.logback:logback-classic:${logbackVersion}"

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testImplementation group: 'io.rest-assured', name: 'json-schema-validator', version: versions.restAssured
    testImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured
    testImplementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    testImplementation "org.junit.vintage:junit-vintage-engine:5.6.2"
    testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.2.0'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testImplementation "ch.qos.logback:logback-classic:1.2.3"
    testImplementation group: 'com.aventstack', name: 'extentreports', version: '5.0.2'

    smokeTestImplementation sourceSets.main.runtimeClasspath

    //Smoke Test Dependencies - START
    smokeTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }

    smokeTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    smokeTestCompile("org.springframework.boot:spring-boot-starter-test")
    smokeTestCompile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    smokeTestCompile group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.reformLogging
    smokeTestCompile group: 'uk.gov.hmcts.reform', name: 'logging-httpcomponents', version: versions.reformLogging
    smokeTestCompile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging

    smokeTestImplementation group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
    smokeTestImplementation group: 'io.rest-assured', name: 'json-path', version: '4.2.0'
    smokeTestImplementation 'io.rest-assured:rest-assured:4.2.0'
    smokeTestImplementation 'io.rest-assured:json-schema-validator:4.2.0'

    smokeTestImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    smokeTestImplementation "org.junit.vintage:junit-vintage-engine:5.6.2"
    smokeTestImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.2.0'
    smokeTestAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    smokeTestCompileOnly 'org.projectlombok:lombok:1.18.12'
    smokeTestImplementation "ch.qos.logback:logback-classic:1.2.3"

    smokeTestImplementation sourceSets.main.runtimeClasspath
    //Smoke Test Dependencies - FINISH

    //Integration Test Dependencies - START
    integrationTestImplementation("org.springframework.boot:spring-boot-starter-test")
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-screenplay', version: versions.serenity
    integrationTestImplementation group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
    integrationTestImplementation group: 'io.rest-assured', name: 'json-path', version: '4.2.0'
    integrationTestAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    integrationTestCompileOnly 'org.projectlombok:lombok:1.18.12'
    integrationTestImplementation "ch.qos.logback:logback-classic:1.2.3"
    integrationTestImplementation "org.assertj:assertj-core:3.8.0"
    integrationTestImplementation "junit:junit:${junitVersion}"
    integrationTestImplementation "org.junit.vintage:junit-vintage-engine:5.6.2"

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath
    //Integration Test Dependencies - FINISH

    //Acceptance Test Dependencies - START
    acceptanceTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    acceptanceTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    acceptanceTestCompile("org.springframework.boot:spring-boot-starter-test")
    acceptanceTestImplementation group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
    acceptanceTestImplementation group: 'io.rest-assured', name: 'json-path', version: '4.2.0'
    acceptanceTestImplementation 'io.rest-assured:rest-assured:4.2.0'
    acceptanceTestImplementation 'io.rest-assured:json-schema-validator:4.2.0'

    acceptanceTestImplementation "org.junit.jupiter:junit-jupiter:5.6.2"
    acceptanceTestImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.6.2'
    acceptanceTestImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.6.2'
    acceptanceTestImplementation group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.6.2'
    acceptanceTestImplementation group: 'org.junit.platform', name: 'junit-platform-suite-api', version: '1.6.2'
    acceptanceTestImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.6.2'

    acceptanceTestAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    acceptanceTestCompileOnly 'org.projectlombok:lombok:1.18.12'
    acceptanceTestImplementation "ch.qos.logback:logback-classic:1.2.3"
    acceptanceTestImplementation group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '2.27.1'
    acceptanceTestImplementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'

    acceptanceTestImplementation sourceSets.main.runtimeClasspath
    acceptanceTestImplementation sourceSets.test.runtimeClasspath
    //Acceptance Test Dependencies - FINISH

    //Contract Testing Dependencies - START
    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }

    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter', {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }

    contractTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    contractTestImplementation group: 'io.rest-assured', name: 'json-schema-validator', version: versions.restAssured
    contractTestImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured
    contractTestImplementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit5_2.12', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-java8_2.12', version: versions.pact_version
    contractTestCompile group: 'au.com.dius', name: 'pact-jvm-provider-junit5', version: '4.0.10'
    contractTestCompile group: 'au.com.dius', name: 'pact-jvm-provider-gradle', version: '4.0.10'

    contractTestImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    contractTestImplementation "org.junit.vintage:junit-vintage-engine:5.6.2"
    contractTestCompile("org.junit.jupiter:junit-jupiter-api:5.6.2")
    contractTestRuntime("org.junit.jupiter:junit-jupiter-engine:5.6.2")
    contractTestImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.2.0'

    contractTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.3.RELEASE'
    contractTestImplementation group: 'io.rest-assured', name: 'xml-path', version: '4.2.0'
    contractTestImplementation group: 'io.rest-assured', name: 'json-path', version: '4.2.0'

    contractTestAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    contractTestCompileOnly 'org.projectlombok:lombok:1.18.12'
    contractTestImplementation "ch.qos.logback:logback-classic:1.2.3"

    contractTestImplementation group: 'com.github.everit-org.json-schema', name: 'org.everit.json.schema', version: '1.12.1'

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath
    //Contract Testing Dependencies - FINISH

    //Functional Testing Dependencies - START
    functionalTestImplementation("org.springframework.boot:spring-boot-starter-web")
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    functionalTestCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-screenplay', version: versions.serenity
    functionalTestAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    functionalTestCompileOnly 'org.projectlombok:lombok:1.18.12'
    functionalTestImplementation "ch.qos.logback:logback-classic:1.2.3"
    functionalTestImplementation "org.assertj:assertj-core:3.8.0"
    functionalTestImplementation "junit:junit:${junitVersion}"
    functionalTestImplementation "org.junit.vintage:junit-vintage-engine:5.6.2"
    functionalTestCompile("org.springframework.boot:spring-boot-starter-test")
    functionalTestCompile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger
    functionalTestImplementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger

    functionalTestImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured
    functionalTestImplementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
    functionalTestImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'

    compile group: 'org.everit.json', name: 'org.everit.json.schema', version: '1.5.1'
    //Functional Testing Dependencies - FINISH
}

mainClassName = 'uk.gov.hmcts.reform.demo.Application'

serenity {
    reports = ["single-page-html"]

}

bootJar {
    getArchiveFileName().set(provider {
        'spring-boot-template.jar'
    })

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

pact {

    reports {
        defaultReports() // adds the standard console output

        markdown // report in markdown format
        json // report in json format
    }

    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getProperty("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        tags = [System.getenv("PACT_BRANCH_NAME") ?: 'Dev']
        version = project.pactVersion
    }

    serviceProviders {

        SandL_API {

            protocol = System.getenv("PACT_SandL_PROTOCOL") ?: 'http'
            host = System.getenv("PACT_SandL_HOST") ?: 'hmi-apim-svc-test.azure-api.net'
            port = Integer.parseInt(System.getenv("PACT_SandL_PORT") ?: '80')
            path = System.getenv("PACT_SandL_PATH") ?: '/'

            if ('pactVerify' in gradle.startParameter.taskNames) {
                hasPactsFromPactBroker(System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80') {
                    project.version = project.pactVersion
                }
            }
        }
    }
}

