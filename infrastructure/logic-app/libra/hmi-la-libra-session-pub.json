{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflows_hmi_la_dtulibra_session_publisher_dev_name": {
      "defaultValue": "hmi-la-dtulibra-session-publisher-dev",
      "type": "String"
    },
    "storageAccountName": {
      "type": "string"
    },
    "storageAccessKey": {
      "type": "securestring"
    },
    "environmentName": {
      "type": "string"
    },
    "appId": {
      "type": "securestring"
    },
    "appSecret": {
      "type": "securestring"
    },
    "tenantId": {
      "type": "securestring"
    },
    "keyvaultName": {
      "type": "string"
    },
    "serviceNowHostUrl": {
      "type": "string"
    },
    "serviceNowAssignemntGroupId": {
      "type": "string"
    },
    "serviceNowUserRoleTypeId": {
      "type": "string"
    },
    "serviceNowServiceOfferingId": {
      "type": "string"
    },
    "serviceNowCallerId": {
      "type": "string"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "[parameters('environmentName')]",
        "application": "hearing-management-interface",
        "businessarea": "cross-cutting",
        "builtFrom": "hmcts/hmi-api-gateway-fh"
      },
      "name": "azureblob",
      "properties": {
        "api": {
          "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
        },
        "displayName": "HMI DTU Rota",
        "parameterValues": {
          "accountName": "[parameters('storageAccountName')]",
          "accessKey": "[parameters('storageAccessKey')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "keyvault",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "[parameters('environmentName')]",
        "application": "hearings-management-interface",
        "businessarea": "cross-cutting",
        "builtFrom": "hmcts/hmi-api-gateway-fh"
      },
      "properties": {
        "displayName": "HMI Key Vault",
        "customParameterValues": {
        },
        "api": {
          "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
        },
        "parameterValues": {
          "token:clientId": "[parameters('appId')]",
          "token:clientSecret": "[parameters('appSecret')]",
          "token:TenantId": "[parameters('tenantId')]",
          "token:grantType": "client_credentials",
          "vaultName": "[parameters('keyvaultName')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "azuretables",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "[parameters('environmentName')]",
        "application": "hearing-management-interface",
        "businessarea": "cross-cutting",
        "builtFrom": "hmcts/hmi-api-gateway-fh"
      },
      "kind": "V1",
      "properties": {
        "displayName": "HMI DTU Rota",
        "statuses": [
          {
            "status": "Connected"
          }
        ],
        "customParameterValues": {},
        "api": {
          "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuretables')]"
        },
        "parameterValues": {
          "storageaccount": "[parameters('storageAccountName')]",
          "sharedKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('workflows_hmi_la_dtulibra_session_publisher_dev_name')]",
      "location": "uksouth",
      "tags": {
        "environment": "[parameters('environmentName')]",
        "application": "hearings-management-interface",
        "businessarea": "cross-cutting",
        "builtFrom": "hmcts/hmi-api-gateway-fh"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', 'azureblob')]",
        "[resourceId('Microsoft.Web/connections', 'azuretables')]"
      ],
      "properties": {
        "state": "Disabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "actions": {
            "Copy_blob_(V2)": {
              "runAfter": {
                "Get_blob_content_(V2)": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "headers": {
                  "ReadFileMetadataFromServer": true
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/copyFile",
                "queries": {
                  "destination": "@{concat('libra/output/', body('Parse_JSON')?['filename'])}",
                  "overwrite": true,
                  "queryParametersSingleEncoded": true,
                  "source": "@{concat('libra/input/', body('Parse_JSON')?['filename'])}"
                }
              }
            },
            "Delete_blob_(V2)": {
              "runAfter": {
                "Copy_blob_(V2)": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "headers": {
                  "SkipDeleteIfFileNotFoundOnServer": false
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "delete",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(concat('libra/input/', body('Parse_JSON')?['filename'])))}"
              }
            },
            "Get_blob_content_(V2)": {
              "runAfter": {
                "Update_status_to_Loading": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(concat('libra/input/', body('Parse_JSON')?['filename'])))}/content",
                "queries": {
                  "inferContentType": true
                }
              }
            },
            "Get_secret_hmi-client": {
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('hmi-dtu-client-nonprod-id')}/value"
              }
            },
            "Get_secret_hmi-secret": {
              "runAfter": {
                "Get_secret_hmi-client": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('hmi-dtu-client-nonprod-pwd')}/value"
              }
            },
            "Insert_or_Merge_Entity": {
              "runAfter": {
                "Delete_blob_(V2)": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "status": "COMPLETE"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuretables']['connectionId']"
                  }
                },
                "method": "patch",
                "path": "/Tables/@{encodeURIComponent('libraFiles')}/entities(PartitionKey='@{encodeURIComponent(body('Parse_JSON')?['filename'])}',RowKey='@{encodeURIComponent(body('Parse_JSON')?['filename'])}')"
              }
            },
            "Parse_JSON": {
              "runAfter": {},
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()",
                "schema": {
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Update_status_to_Loading": {
              "runAfter": {
                "Get_secret_hmi-secret": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "status": "LOADING"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuretables']['connectionId']"
                  }
                },
                "method": "patch",
                "path": "/Tables/@{encodeURIComponent('libraFiles')}/entities(PartitionKey='@{encodeURIComponent(body('Parse_JSON')?['filename'])}',RowKey='@{encodeURIComponent(body('Parse_JSON')?['filename'])}')"
              }
            },
            "read.me": {
              "runAfter": {
                "Insert_or_Merge_Entity": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": "@concat('contains libra files')",
                "headers": {
                  "ReadFileMetadataFromServer": true
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                "queries": {
                  "folderPath": "/libra/input/",
                  "name": "read.me",
                  "queryParametersSingleEncoded": true
                }
              },
              "runtimeConfiguration": {
                "contentTransfer": {
                  "transferMode": "Chunked"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "connectionId": "[concat('subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/azureblob')]",
                "connectionName": "azureblob",
                "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
              },
              "azuretables": {
                "connectionId": "[concat('subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/azuretables')]",
                "connectionName": "azuretables",
                "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuretables')]"
              },
              "keyvault": {
                "connectionId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/keyvault')]",
                "connectionName": "keyvault",
                "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
              }
            }
          }
        }
      }
    }
  ]
}