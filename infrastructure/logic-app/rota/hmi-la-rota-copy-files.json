{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_hmi_la_dturota_copy_files_dev_name": {
            "defaultValue": "hmi-la-dturota-copy-files-dev",
            "type": "String"
        },
        "environmentName": {
            "type": "string"
        },
        "storageAccountName": {
            "type": "string"
        },
        "storageAccessKey": {
            "type": "securestring"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2017-07-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "environment": "[parameters('environmentName')]",
                "application": "hearing-management-interface",
                "businessarea": "cross-cutting",
                "builtFrom": "hmcts/hmi-api-gateway-fh"
            },
            "name": "azureblob",
            "properties": {
                "api": {
                    "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
                },
                "displayName": "HMI DTU Rota",
                "parameterValues": {
                    "accountName": "[parameters('storageAccountName')]",
                    "accessKey": "[parameters('storageAccessKey')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2017-07-01",
            "name": "azuretables",
            "location": "[resourceGroup().location]",
            "tags": {
                "environment": "[parameters('environmentName')]",
                "application": "hearing-management-interface",
                "businessarea": "cross-cutting",
                "builtFrom": "hmcts/hmi-api-gateway-fh"
            },
            "kind": "V1",
            "properties": {
                "displayName": "HMI DTU Rota",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "api": {
                    "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuretables')]"
                },
                "parameterValues": {
                    "storageaccount": "[parameters('storageAccountName')]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2017-07-01",
            "name": "azuretables-3",
            "location": "[resourceGroup().location]",
            "tags": {
                "environment": "[parameters('environmentName')]",
                "application": "hearing-management-interface",
                "businessarea": "cross-cutting",
                "builtFrom": "hmcts/hmi-api-gateway-fh"
            },
            "kind": "V1",
            "properties": {
                "displayName": "HMI DTU Rota",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "api": {
                    "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuretables')]"
                },
                "parameterValues": {
                    "storageaccount": "[parameters('storageAccountName')]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_hmi_la_dturota_copy_files_dev_name')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "environment": "[parameters('environmentName')]",
                "application": "hearings-management-interface",
                "businessarea": "cross-cutting",
                "builtFrom": "hmcts/hmi-api-gateway-fh"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', 'azureblob')]",
                "[resourceId('Microsoft.Web/connections', 'azuretables')]",
                "[resourceId('Microsoft.Web/connections', 'azuretables_1')]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 5
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 5
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Create_blob_readme_file_inside_primaryinput": {
                            "runAfter": {
                                "Initialize_variable_copyFilesCount": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@concat('place input files here')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                                "queries": {
                                    "folderPath": "/rota/primaryinput/",
                                    "name": "read.me",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Lists_files')?['value']",
                            "actions": {
                                "Condition_copyFilesCount_less_than": {
                                    "actions": {
                                        "is_file_xml": {
                                            "actions": {
                                                "Get_entities_for_rota_files": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuretables']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/Tables/@{encodeURIComponent('rotaFiles')}/entities",
                                                        "queries": {
                                                            "$filter": "RowKey eq '@{items('For_each')?['Name']}'"
                                                        }
                                                    }
                                                },
                                                "Set_variable_rota_files_row_count": {
                                                    "runAfter": {
                                                        "Get_entities_for_rota_files": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "rotaFilesRowCount",
                                                        "value": "@length(body('Get_entities_for_rota_files')?['value'])"
                                                    }
                                                },
                                                "file_processing_is_in_progress": {
                                                    "actions": {
                                                        "Delete_blob_primary_input": {
                                                            "runAfter": {},
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "headers": {
                                                                    "SkipDeleteIfFileNotFoundOnServer": false
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "delete",
                                                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(items('For_each')?['Path']))}"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Set_variable_rota_files_row_count": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Create_blob_in_rota_input_folder": {
                                                                "runAfter": {
                                                                    "Get_blob_content_using_path_rota_primary_input": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": "@body('Get_blob_content_using_path_rota_primary_input')",
                                                                    "headers": {
                                                                        "ReadFileMetadataFromServer": true
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                                                                    "queries": {
                                                                        "folderPath": "/rota/input/",
                                                                        "name": "@items('For_each')?['Name']",
                                                                        "queryParametersSingleEncoded": true
                                                                    }
                                                                },
                                                                "runtimeConfiguration": {
                                                                    "contentTransfer": {
                                                                        "transferMode": "Chunked"
                                                                    }
                                                                }
                                                            },
                                                            "Delete_blob_rota_primary_input": {
                                                                "runAfter": {
                                                                    "Create_blob_in_rota_input_folder": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "headers": {
                                                                        "SkipDeleteIfFileNotFoundOnServer": false
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "delete",
                                                                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(items('For_each')?['Path']))}"
                                                                }
                                                            },
                                                            "Get_blob_content_using_path_rota_primary_input": {
                                                                "runAfter": {},
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "get",
                                                                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/GetFileContentByPath",
                                                                    "queries": {
                                                                        "inferContentType": true,
                                                                        "path": "@items('For_each')?['Path']",
                                                                        "queryParametersSingleEncoded": true
                                                                    }
                                                                }
                                                            },
                                                            "Increment_variable_copyFilesCount": {
                                                                "runAfter": {
                                                                    "Delete_blob_rota_primary_input": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "IncrementVariable",
                                                                "inputs": {
                                                                    "name": "copyFilesCount",
                                                                    "value": 1
                                                                }
                                                            },
                                                            "Insert_or_Merge_Entity_(V2)": {
                                                                "runAfter": {
                                                                    "Increment_variable_copyFilesCount": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "status": "COPIED"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azuretables_1']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "patch",
                                                                    "path": "/v2/storageAccounts/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/tables/@{encodeURIComponent('rotaInbound')}/entities(PartitionKey='@{encodeURIComponent(items('For_each')?['Name'])}',RowKey='@{encodeURIComponent(items('For_each')?['Name'])}')"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@variables('rotaFilesRowCount')",
                                                                    1
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "endsWith": [
                                                            "@items('For_each')?['Path']",
                                                            ".xml"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {},
                                    "expression": {
                                        "and": [
                                            {
                                                "less": [
                                                    "@variables('copyFilesCount')",
                                                    21
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Lists_files": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_variable_copyFilesCount": {
                            "runAfter": {
                                "Initialize_variable_rota_files_row_count": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "copyFilesCount",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_rota_files_row_count": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "rotaFilesRowCount",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Lists_files": {
                            "runAfter": {
                                "Create_blob_readme_file_inside_primaryinput": [
                                    "Succeeded"
                                ]
                            },
                            "metadata": {
                                "JTJmcm90YSUyZnByaW1hcnlpbnB1dCUyZg==": "/rota/primaryinput/"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/foldersV2/@{encodeURIComponent(encodeURIComponent('JTJmcm90YSUyZnByaW1hcnlpbnB1dCUyZg=='))}",
                                "queries": {
                                    "nextPageMarker": "",
                                    "useFlatListing": false
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[concat('subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/azureblob')]",
                                "connectionName": "azureblob",
                                "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
                            },
                            "azuretables": {
                                "connectionId": "[concat('subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/azuretables')]",
                                "connectionName": "azuretables",
                                "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuretables')]"
                            },
                            "azuretables_1": {
                                "connectionId":"[concat('subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/keyvault')]",
                                "connectionName": "azuretables-3",
                                "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuretables')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}