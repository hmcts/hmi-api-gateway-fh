<policies>
    <inbound>
        <base />
        <choose>
            <when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "SNL")">
                <cache-lookup-value key="snlAuth" variable-name="snlAuthToken" />
                <choose>
                    <when condition="@(context.Variables.GetValueOrDefault("snlAuthToken","") == "")">
                        <send-request ignore-error="false" timeout="20" response-variable-name="snlClientResponse" mode="new">
                            <set-url>https://#{keyVaultHost}#/secrets/snl-user-id/?api-version=7.0</set-url>
                            <set-method>GET</set-method>
                            <authentication-managed-identity resource="https://vault.azure.net" />
                        </send-request>
                        <set-variable name="snlClient" value="@{
                            var secret = ((IResponse)context.Variables["snlClientResponse"]).Body.As<JObject>();
                            return secret["value"].ToString();
                        }" />
                        <send-request ignore-error="false" timeout="20" response-variable-name="snlSecretResponse" mode="new">
                            <set-url>https://#{keyVaultHost}#/secrets/snl-user-pwd/?api-version=7.0</set-url>
                            <set-method>GET</set-method>
                            <authentication-managed-identity resource="https://vault.azure.net" />
                        </send-request>
                        <set-variable name="snlSecret" value="@{
                            var secret = ((IResponse)context.Variables["snlSecretResponse"]).Body.As<JObject>();
                            return secret["value"].ToString();
                        }" />
                        <send-request ignore-error="true" timeout="20" response-variable-name="snlBearerToken" mode="new">
                            <set-url>#{sAndLOauthUrl}#</set-url>
                            <set-method>POST</set-method>
                            <set-header name="Content-Type" exists-action="override">
                                <value>application/x-www-form-urlencoded</value>
                            </set-header>
                            <set-body>@{
                                return "username=" + (string)context.Variables["snlClient"] + "&password=" + (string)context.Variables["snlSecret"] + "&grant_type=password_credentials";}</set-body>
                        </send-request>
                        <set-header name="Authorization" exists-action="override">
                            <value>@("Bearer " + (String)((IResponse)context.Variables["snlBearerToken"]).Body.As<JObject>()["idToken"])</value>
                        </set-header>
                        <cache-store-value key="snlAuth" value="@(context.Request.Headers.GetValueOrDefault("Authorization", ""))" duration="2700" />
                    </when>
                    <otherwise>
                        <set-header name="Authorization" exists-action="override">
                            <value>@((String)context.Variables["snlAuthToken"])</value>
                        </set-header>
                    </otherwise>
                </choose>
                <rewrite-uri template="/" copy-unmatched-params="true" />
                <set-header name="Content-Type" exists-action="override">
                    <value>application/json; charset=utf-8</value>
                </set-header>
                <set-header name="Request-Type" exists-action="override">
                    <value>text</value>
                </set-header>
                <set-header name="Subscription-Key" exists-action="override">
                    <value>@(context.Request.Headers.GetValueOrDefault("Ocp-Apim-Subscription-Key","unknown"))</value>
                </set-header>
                <!--  Don't expose APIM subscription key to the backend. -->
                <set-header name="Ocp-Apim-Subscription-Key" exists-action="delete" />
                <set-backend-service base-url="https://#{sAndLHost}#/rest/hmcts/resources/sessions" />
            </when>
            <when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "MOCK")">
                <return-response>
                    <set-status code="200" />
                    <set-header name="Content-Type" exists-action="override">
                        <value>application/json</value>
                    </set-header>
                    <set-body>
                    {
                        "sessionsResponse": {
                            "sessionCount": 3,
                            "sessions": [
                                {
                                    "sessionIdCaseHQ": "446902289",
                                    "sessionUrl": "https://sit.list-assist.service.justice.gov.uk/casehqsit/vue/Html5ResourceScheduler/loadHearingSchedule.action?venueBookingId=446902289",
                                    "sessionStatus": {
                                        "code": "5",
                                        "description": "Released"
                                    },
                                    "sessionType": {
                                        "code": "CS",
                                        "description": "Civil"
                                    },
                                    "sessionPanelType": "Adult",
                                    "sessionBulkBooking": false,
                                    "sessionOverBooking": false,
                                    "sessionCluster": {
                                        "code": "HSY",
                                        "description": "Humber South Yorkshire"
                                    },
                                    "sessionVenue": {
                                        "locationIdCaseHQ": "1050",
                                        "locationName": "Sheffield Combined Court Centre",
                                        "locationRegion": {
                                            "code": "3",
                                            "description": "North East"
                                        },
                                        "locationCluster": {
                                            "code": "HSY",
                                            "description": "Humber South Yorkshire"
                                        },
                                        "locationReferences": [
                                            {
                                                "key": "EXTERNAL",
                                                "value": "1050"
                                            }
                                        ]
                                    },
                                    "sessionRoom": {
                                        "locationIdCaseHQ": "1070",
                                        "locationName": "Sheffield CCC Hearing Room 2",
                                        "locationDummyFlag": false,
                                        "locationVirtualFlag": false,
                                        "locationRegion": {
                                            "code": "3",
                                            "description": "North East"
                                        },
                                        "locationCluster": {
                                            "code": "HSY",
                                            "description": "Humber South Yorkshire"
                                        },
                                        "locationReferences": [
                                            {
                                                "key": "EXTERNAL",
                                                "value": "1070"
                                            }
                                        ]
                                    },
                                    "sessionStartTime": "2022-02-02T10:00:00Z",
                                    "sessionDuration": 360,
                                    "sessionBreakDuration": 0,
                                    "sessionDurationUsed": 0,
                                    "sessionDurationAvailable": 360,
                                    "sessionSlotDuration": 360,
                                    "sessionSlots": 1,
                                    "sessionSlotsUsed": 0,
                                    "sessionSlotsAvailable": 1,
                                    "sessionJohs": []
                                },
                                {
                                    "sessionIdCaseHQ": "446924511",
                                    "sessionUrl": "https://sit.list-assist.service.justice.gov.uk/casehqsit/vue/Html5ResourceScheduler/loadHearingSchedule.action?venueBookingId=446924511",
                                    "sessionStatus": {
                                        "code": "5",
                                        "description": "Released"
                                    },
                                    "sessionType": {
                                        "code": "CS",
                                        "description": "Civil"
                                    },
                                    "sessionPanelType": "Adult",
                                    "sessionBulkBooking": false,
                                    "sessionOverBooking": false,
                                    "sessionCluster": {
                                        "code": "HSY",
                                        "description": "Humber South Yorkshire"
                                    },
                                    "sessionVenue": {
                                        "locationIdCaseHQ": "1050",
                                        "locationName": "Sheffield Combined Court Centre",
                                        "locationRegion": {
                                            "code": "3",
                                            "description": "North East"
                                        },
                                        "locationCluster": {
                                            "code": "HSY",
                                            "description": "Humber South Yorkshire"
                                        },
                                        "locationReferences": [
                                            {
                                                "key": "EXTERNAL",
                                                "value": "1050"
                                            }
                                        ]
                                    },
                                    "sessionRoom": {
                                        "locationIdCaseHQ": "1072",
                                        "locationName": "Sheffield CCC Hearing Room 4",
                                        "locationDummyFlag": false,
                                        "locationVirtualFlag": false,
                                        "locationRegion": {
                                            "code": "3",
                                            "description": "North East"
                                        },
                                        "locationCluster": {
                                            "code": "HSY",
                                            "description": "Humber South Yorkshire"
                                        },
                                        "locationReferences": [
                                            {
                                                "key": "EXTERNAL",
                                                "value": "1072"
                                            }
                                        ]
                                    },
                                    "sessionStartTime": "2022-02-02T10:00:00Z",
                                    "sessionDuration": 360,
                                    "sessionBreakDuration": 0,
                                    "sessionDurationUsed": 0,
                                    "sessionDurationAvailable": 360,
                                    "sessionSlotDuration": 60,
                                    "sessionSlots": 6,
                                    "sessionSlotsUsed": 0,
                                    "sessionSlotsAvailable": 6,
                                    "sessionJohs": []
                                }
                            ]
                        }
                    }
                    </set-body>
                </return-response>
            </when>
            <otherwise>
                <return-response>
                    <set-status code="400" />
                    <set-header name="Content-Type" exists-action="override">
                        <value>application/json</value>
                    </set-header>
                    <set-body>@{
                    return new JObject(
                    new JProperty("message", context.Request.Headers.GetValueOrDefault("Destination-System","") + " destination doesn't support this functionality")
                    ).ToString();
                    }</set-body>
                </return-response>
            </otherwise>
        </choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
         <choose>
            <when condition="@(context.Response.StatusCode == 401)">
                <cache-remove-value key="snlAuth" />
                <send-request ignore-error="true" timeout="20" response-variable-name="snowAuth" mode="new">
                    <set-url>https://#{keyVaultHost}#/secrets/hmi-servicenow-auth?api-version=7.0</set-url>
                    <set-method>GET</set-method>
                    <authentication-managed-identity resource="https://vault.azure.net" />
                </send-request>
                <send-request ignore-error="false" timeout="20" response-variable-name="serviceNow" mode="new">
                <set-url>https://#{snowHost}#/api/now/table/incident?sysparm_fields=number</set-url>
                <set-method>POST</set-method>
                <set-header name="Authorization" exists-action="override">
                    <value>@("Basic " + ((IResponse)context.Variables["snowAuth"]).Body.As<JObject>()["value"].ToString())</value>
                </set-header>
                <set-body>@{
                    return new JObject(
                    new JProperty("assignment_group", "56b756774fbd368057db0b318110c7bd"),
                    new JProperty("caller_id", "1475a0491b743414f0dc85e4464bcb7a"),
                    new JProperty("category", "Data Issue"),
                    new JProperty("contact_type", "Alert"),
                    new JProperty("description", "HMI - Get Sessions: " + context.Request.Headers.GetValueOrDefault("transactionIdHMCTS","")),
                    new JProperty("impact", "2"),
                    new JProperty("service_offering", "138e0c541bc5bc507bdaddf0b24bcb2a"),
                    new JProperty("short_description", "HMI - API Gateway Error - Authentication Issue"),
                    new JProperty("subcategory", "HMI - Backend Service Failure"),
                    new JProperty("u_role_type", "c319bc4bdb41834074abffa9bf96199c"),
                    new JProperty("urgency", "3")
                    ).ToString();
                    }</set-body>
                <return-response>
						<set-status code="502" />
						<set-header name="Content-Type">
							<value>application/json</value>
						</set-header>
						<set-body>@{
						return new JObject(
							new JProperty("message", "Successfully authenticated by HMI, however target system failed to authenticate. Please try again.")
						    ).ToString();
						}
					</set-body>
				</return-response>
            </when>
             <when condition="@(context.Response.StatusCode == 403)">
                <cache-remove-value key="snlAuth" />
                 <send-request ignore-error="true" timeout="20" response-variable-name="snowAuth" mode="new">
                     <set-url>https://#{keyVaultHost}#/secrets/hmi-servicenow-auth?api-version=7.0</set-url>
                     <set-method>GET</set-method>
                     <authentication-managed-identity resource="https://vault.azure.net" />
                 </send-request>
                 <send-request ignore-error="false" timeout="20" response-variable-name="serviceNow" mode="new">
                 <set-url>https://#{snowHost}#/api/now/table/incident?sysparm_fields=number</set-url>
                 <set-method>POST</set-method>
                 <set-header name="Authorization" exists-action="override">
                     <value>@("Basic " + ((IResponse)context.Variables["snowAuth"]).Body.As<JObject>()["value"].ToString())</value>
                 </set-header>
                 <set-body>@{
                     return new JObject(
                     new JProperty("assignment_group", "56b756774fbd368057db0b318110c7bd"),
                     new JProperty("caller_id", "1475a0491b743414f0dc85e4464bcb7a"),
                     new JProperty("category", "Data Issue"),
                     new JProperty("contact_type", "Alert"),
                     new JProperty("description", "HMI - Get Sessions: " + context.Request.Headers.GetValueOrDefault("transactionIdHMCTS","")),
                     new JProperty("impact", "2"),
                     new JProperty("service_offering", "138e0c541bc5bc507bdaddf0b24bcb2a"),
                     new JProperty("short_description", "HMI - API Gateway Error - Authorization Issue"),
                     new JProperty("subcategory", "HMI - Backend Service Failure"),
                     new JProperty("u_role_type", "c319bc4bdb41834074abffa9bf96199c"),
                     new JProperty("urgency", "3")
                     ).ToString();
                     }</set-body>
                 <return-response>
						<set-status code="502" />
						<set-header name="Content-Type">
							<value>application/json</value>
						</set-header>
						<set-body>@{
						return new JObject(
							new JProperty("message", "Successfully authorized by HMI, however target system failed to authorize. Please try again.")
						    ).ToString();
						}
					</set-body>
				</return-response>
            </when>
            <when condition="@(context.Response.StatusCode == 500)">
                <send-request ignore-error="true" timeout="20" response-variable-name="snowAuth" mode="new">
					<set-url>https://#{keyVaultHost}#/secrets/hmi-servicenow-auth?api-version=7.0</set-url>
					<set-method>GET</set-method>
					<authentication-managed-identity resource="https://vault.azure.net" />
				</send-request>
				<send-request ignore-error="false" timeout="20" response-variable-name="serviceNow" mode="new">
					<set-url>https://#{snowHost}#/api/now/table/incident?sysparm_fields=number</set-url>
					<set-method>POST</set-method>
					<set-header name="Authorization" exists-action="override">
						<value>@("Basic " + ((IResponse)context.Variables["snowAuth"]).Body.As<JObject>()["value"].ToString())</value>
					</set-header>
					<set-body>@{
						return new JObject(
							new JProperty("assignment_group", "56b756774fbd368057db0b318110c7bd"),
							new JProperty("caller_id", "1475a0491b743414f0dc85e4464bcb7a"),
							new JProperty("category", "Data Issue"),
							new JProperty("contact_type", "Alert"),
							new JProperty("description", "HMI - Get Sessions: " + context.Request.Headers.GetValueOrDefault("transactionIdHMCTS","")),
							new JProperty("impact", "2"),
							new JProperty("service_offering", "138e0c541bc5bc507bdaddf0b24bcb2a"),
							new JProperty("short_description", "HMI - API Gateway Error"),
							new JProperty("subcategory", "HMI - Backend Service Failure"),
							new JProperty("u_role_type", "c319bc4bdb41834074abffa9bf96199c"),
							new JProperty("urgency", "3")
							).ToString();    
					}</set-body>
				</send-request>
            </when>
        </choose>
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>
