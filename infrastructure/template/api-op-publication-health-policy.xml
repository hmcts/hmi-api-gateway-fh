<policies>
    <inbound>
        <!--cache-lookup-value key="snlAuth" variable-name="snlAuthToken" />
        <choose>
            <when condition="@(context.Variables.GetValueOrDefault("snlAuthToken","") == "")">
                <send-request ignore-error="true" timeout="20" response-variable-name="bearerToken" mode="new">
                    <set-url>#{sAndLOauthUrl}#</set-url>
                    <set-method>POST</set-method>
                    <set-header name="Content-Type" exists-action="override">
                        <value>application/x-www-form-urlencoded</value>
                    </set-header>
                    <set-body>@{
                        return "username=#{sAndLAuthClient}#&password=#{sAndLAuthSecret}#&grant_type=password_credentials";}</set-body>
                </send-request>
                <cache-store-value key="snlAuth" value="@("Bearer " + (String)((IResponse)context.Variables["bearerToken"]).Body.As<JObject>()["idToken"])" duration="2700" />
            </when>
        </choose>
        <set-header name="Authorization" exists-action="override">
            <value>@((String)context.Variables["snlAuthToken"])</value>
        </set-header>
        <rewrite-uri template="/" copy-unmatched-params="true" />
        <set-header name="Content-Type" exists-action="override">
            <value>application/json; charset=utf-8</value>
        </set-header>
        <set-header name="Request-Type" exists-action="override">
            <value>text</value>
        </set-header>
        <set-header name="ApiVersion" exists-action="override">
            <value>1.9</value>
        </set-header-->
        <rewrite-uri template="/" copy-unmatched-params="true" />
        <set-backend-service base-url="https://#{pihHost}#/" />
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>