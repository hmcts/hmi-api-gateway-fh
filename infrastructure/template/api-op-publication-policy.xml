<policies>
    <inbound>
        <base />
        <choose>
            <when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "PIH")">
            <send-request ignore-error="false" timeout="20" response-variable-name="pipClientResponse" mode="new">
                <set-url>https://#{keyVaultHost}#/secrets/pip-client-id/?api-version=7.0</set-url>
                <set-method>GET</set-method>
                <authentication-managed-identity resource="https://vault.azure.net" />
            </send-request>
            <set-variable name="pipClient" value="@{
            var secret = ((IResponse)context.Variables["pipClientResponse"]).Body.As<JObject>();
            return secret["value"].ToString();
        }" />
            <send-request ignore-error="false" timeout="20" response-variable-name="pipSecretResponse" mode="new">
                <set-url>https://#{keyVaultHost}#/secrets/pip-client-pwd/?api-version=7.0</set-url>
                <set-method>GET</set-method>
                <authentication-managed-identity resource="https://vault.azure.net" />
            </send-request>
            <set-variable name="pipSecret" value="@{
            var secret = ((IResponse)context.Variables["pipSecretResponse"]).Body.As<JObject>();
            return secret["value"].ToString();
        }" />
            <send-request ignore-error="false" timeout="20" response-variable-name="pipScopeResponse" mode="new">
                <set-url>https://#{keyVaultHost}#/secrets/pip-data-mgnt-scope/?api-version=7.0</set-url>
                <set-method>GET</set-method>
                <authentication-managed-identity resource="https://vault.azure.net" />
            </send-request>
            <set-variable name="pipScope" value="@{
            var secret = ((IResponse)context.Variables["pipScopeResponse"]).Body.As<JObject>();
            return secret["value"].ToString();
        }" />
            <send-request ignore-error="true" timeout="20" response-variable-name="pipBearerToken" mode="new">
                <set-url>https://login.microsoftonline.com/531ff96d-0ae9-462a-8d2d-bec7c0b42082/oauth2/v2.0/token</set-url>
                <set-method>POST</set-method>
                <set-header name="Content-Type" exists-action="override">
                    <value>application/x-www-form-urlencoded</value>
                </set-header>
                <set-body>@{
                    return "client_id=" + (string)context.Variables["pipClient"] + "&scope=" + (string)context.Variables["pipScope"] + "/.default&client_secret=" + (string)context.Variables["pipSecret"] + "&grant_type=client_credentials";
                    }</set-body>
            </send-request>
            <set-variable name="pipAuthToken" value="@("Bearer " + (String)((IResponse)context.Variables["pipBearerToken"]).Body.As<JObject>()["access_token"])" />
            <set-header name="Authorization" exists-action="override">
                <value>@((String)context.Variables["pipAuthToken"])</value>
            </set-header>
            <set-header name="x-provenance" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("Source-System","unknown"))</value>
            </set-header>
            <rewrite-uri template="/" copy-unmatched-params="true" />
            <set-backend-service base-url="https://#{pihHost}#/pip/data-management/publication" />
        </when>
        <when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "MOCK")">
        <mock-response status-code="201" content-type="application/json" />
        <cache-store-value key="snlAuth" value="@("Bearer " + (String)((IResponse)context.Variables["snlBearerToken"]).Body.As<JObject>()["access_token"])" duration="2700" />
        <cache-lookup-value key="snlAuth" variable-name="snlAuthToken" />
    </when>
    <when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "SNL")">
    <set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
    <return-response>
        <set-status code="400" />
        <set-header name="Content-Type">
            <value>application/json</value>
        </set-header>
        <set-body>@{
            return new JObject(
            new JProperty("message", "SNL doesn't support this functionality")
            ).ToString();
            }
        </set-body>
    </return-response>
</when>
<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "CFT")">
<set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
<return-response>
<set-status code="400" />
<set-header name="Content-Type">
    <value>application/json</value>
</set-header>
<set-body>@{
    return new JObject(
    new JProperty("message", "CFT doesn't support this functionality")
    ).ToString();
    }
</set-body>
</return-response>
        </when>
<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "CRIME")">
<set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
<return-response>
<set-status code="400" />
<set-header name="Content-Type">
    <value>application/json</value>
</set-header>
<set-body>@{
    return new JObject(
    new JProperty("message", "CRIME doesn't support this functionality")
    ).ToString();
    }
</set-body>
</return-response>
        </when>
<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "ELINKS")">
<set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
<return-response>
<set-status code="400" />
<set-header name="Content-Type">
    <value>application/json</value>
</set-header>
<set-body>@{
    return new JObject(
    new JProperty("message", "ELINKS doesn't support this functionality")
    ).ToString();
    }
</set-body>
</return-response>
        </when>
<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "RM")">
<set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
<return-response>
<set-status code="400" />
<set-header name="Content-Type">
    <value>application/json</value>
</set-header>
<set-body>@{
    return new JObject(
    new JProperty("message", "RM doesn't support this functionality")
    ).ToString();
    }
</set-body>
</return-response>
        </when>
<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "HMI-DTU")">
<set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
<return-response>
<set-status code="400" />
<set-header name="Content-Type">
    <value>application/json</value>
</set-header>
<set-body>@{
    return new JObject(
    new JProperty("message", "HMI-DTU doesn't support this functionality")
    ).ToString();
    }
</set-body>
</return-response>
        </when>
         </choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>