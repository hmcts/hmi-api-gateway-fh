<policies>
    <inbound>
        <base />
        <set-variable name="invalidQueryParams" value="@{
                string[] qryPrmKeys = context.Request.Url.Query.Keys.ToArray();
                string[] allowedKeys = {"hearingIdCaseHQ","hearingDate","hearingType"};
                bool invalidQueryParam = false;
                if(context.Request.Url.Query.Count &gt; 0){
                    for (int i = 0; i &lt; qryPrmKeys.Count(); i++)
                    {
                        bool keyFound = false;
                        for (int j = 0; j &lt; allowedKeys.Count(); j++)
                        {
                            if (qryPrmKeys[i] == allowedKeys[j]){
                                keyFound = true;
                                break;
                            }
                        }
                        if(!keyFound){
                            invalidQueryParam = true;
                            break;
                        }
                    }
                }

                return invalidQueryParam;
            }" />
            <choose>
                <when condition="@(context.Request.Url.Query.Count > 3 || (bool)context.Variables["invalidQueryParams"])">
                    <return-response>
                        <set-status code="400" reason="Malformed request." />
                        <set-body>@{
                            return new JObject(
                            new JProperty("statusCode", 400),
                            new JProperty("message", "Invalid query parameter/s in the request URL.")
                            ).ToString();
                            }</set-body>
                    </return-response>
                </when>
				<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "CFT")">
					<rewrite-uri template="/retrieve-hearing" copy-unmatched-params="true" />
					<set-backend-service base-url="http://hmi-casehqemulator.sandbox.platform.hmcts.net/hearings/" />
				</when>
				<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "S&L")">
					<rewrite-uri template="/retrieve-hearing" copy-unmatched-params="true" />
					<set-backend-service base-url="http://#{sAndLHost}#/hearings/" />
				</when>
				<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "CRIME")">
					<rewrite-uri template="/retrieve-hearing" copy-unmatched-params="true" />
					<set-backend-service base-url="http://hmi-casehqemulator.sandbox.platform.hmcts.net/hearings/" />
				</when>
				<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "MOCK")">
					<choose>
		            <when condition="@(context.Request.OriginalUrl.Query.GetValueOrDefault("hearingIdCaseHQ") != null)">
		                <return-response>
		                    <set-status code="200" />
		                    <set-header name="Content-Type" exists-action="override">
		                        <value>application/json</value>
		                    </set-header>
		                    <set-body>@{
		                         return new JObject(
		                            new JProperty("listingRequestId", "5f2bffce29c77b6fef1e7488"),
		                            new JProperty("hearingIdCaseHQ", context.Request.OriginalUrl.Query.GetValueOrDefault("hearingIdCaseHQ")),
		                            new JProperty("hearingType", "Crime"),
		                            new JProperty("hearingDate", "2020-01-28"),
		                            new JProperty("hearingStartTime", "08:45"),
		                            new JProperty("hearingEndTime", "10:45"),
		                            new JProperty("hearingCaseIdHMCTS", "5f2bffcee0b6aa870e82f007"),
		                            new JProperty("hearingSessionIdCaseHQ", "5f2bffceef36b0eaf339d884"),
		                            new JProperty("hearingTranslatorRequired", "No"),
		                            new JProperty("hearingCreatedDate", "2020-09-16"),
		                            new JProperty("hearingCreatedBy", "Donald Duck"),
		                            new JProperty("hearingVenueId", "V3455"),
		                            new JProperty("hearingRoomId", "R2345")
		                        ).ToString();
		                    }</set-body>
		                </return-response>
		            </when>
		            <when condition="@(context.Request.OriginalUrl.Query.GetValueOrDefault("hearingDate") != null)">
		                <return-response>
		                    <set-status code="200" />
		                    <set-header name="Content-Type" exists-action="override">
		                        <value>application/json</value>
		                    </set-header>
		                    <set-body>@{
		                        var data = new JArray();
		                        JObject recordOne = new JObject(
		                            new JProperty("listingRequestId", "5f2bffce29c77b6fef1e7488"),
		                            new JProperty("hearingIdCaseHQ", "5f2bffce29c77b6fef1e7499"),
		                            new JProperty("hearingType", "Crime"),
		                            new JProperty("hearingDate", context.Request.OriginalUrl.Query.GetValueOrDefault("hearingDate")),
		                            new JProperty("hearingStartTime", "08:45"),
		                            new JProperty("hearingEndTime", "10:45"),
		                            new JProperty("hearingCaseIdHMCTS", "5f2bffcee0b6aa870e82f007"),
		                            new JProperty("hearingSessionIdCaseHQ", "5f2bffceef36b0eaf339d884"),
		                            new JProperty("hearingTranslatorRequired", "No"),
		                            new JProperty("hearingCreatedDate", "2020-09-16"),
		                            new JProperty("hearingCreatedBy", "Donald Duck"),
		                            new JProperty("hearingVenueId", "V3455"),
		                            new JProperty("hearingRoomId", "R2345")
		                        );
		                        JObject recordTwo = new JObject(
		                            new JProperty("listingRequestId", "5f2bffce29c77b6fef1e7488"),
		                            new JProperty("hearingIdCaseHQ", "5f2bffce29c77b6fef1e7777"),
		                            new JProperty("hearingType", "Crime"),
		                            new JProperty("hearingDate", context.Request.OriginalUrl.Query.GetValueOrDefault("hearingDate")),
		                            new JProperty("hearingStartTime", "08:45"),
		                            new JProperty("hearingEndTime", "10:45"),
		                            new JProperty("hearingCaseIdHMCTS", "5f2bffcee0b6aa870e82f007"),
		                            new JProperty("hearingSessionIdCaseHQ", "5f2bffceef36b0eaf339d884"),
		                            new JProperty("hearingTranslatorRequired", "No"),
		                            new JProperty("hearingCreatedDate", "2020-09-16"),
		                            new JProperty("hearingCreatedBy", "Donald Duck"),
		                            new JProperty("hearingVenueId", "V3455"),
		                            new JProperty("hearingRoomId", "R2345")
		                        );
		                        data.Add(recordOne);
		                        data.Add(recordTwo);
		                        return data.ToString();
		                    }</set-body>
		                </return-response>
		            </when>
		            <when condition="@(context.Request.OriginalUrl.Query.GetValueOrDefault("hearingType") != null)">
		                <return-response>
		                    <set-status code="200" />
		                    <set-header name="Content-Type" exists-action="override">
		                        <value>application/json</value>
		                    </set-header>
		                    <set-body>@{
		                        var data = new JArray();
		                        JObject recordOne = new JObject(
		                            new JProperty("listingRequestId", "5f2bffce29c77b6fef1e7488"),
		                            new JProperty("hearingIdCaseHQ", "5f2bffce29c77b6fef1e7499"),
		                            new JProperty("hearingType", context.Request.OriginalUrl.Query.GetValueOrDefault("hearingType")),
		                            new JProperty("hearingDate", "2020-09-16"),
		                            new JProperty("hearingStartTime", "08:45"),
		                            new JProperty("hearingEndTime", "10:45"),
		                            new JProperty("hearingCaseIdHMCTS", "5f2bffcee0b6aa870e82f007"),
		                            new JProperty("hearingSessionIdCaseHQ", "5f2bffceef36b0eaf339d884"),
		                            new JProperty("hearingTranslatorRequired", "No"),
		                            new JProperty("hearingCreatedDate", "2020-09-16"),
		                            new JProperty("hearingCreatedBy", "Donald Duck"),
		                            new JProperty("hearingVenueId", "V3455"),
		                            new JProperty("hearingRoomId", "R2345")
		                        );
		                        JObject recordTwo = new JObject(
		                            new JProperty("listingRequestId", "5f2bffce29c77b6fef1e7488"),
		                            new JProperty("hearingIdCaseHQ", "5f2bffce29c77b6fef1e7777"),
		                            new JProperty("hearingType", context.Request.OriginalUrl.Query.GetValueOrDefault("hearingType")),
		                            new JProperty("hearingDate", "2020-09-16"),
		                            new JProperty("hearingStartTime", "08:45"),
		                            new JProperty("hearingEndTime", "10:45"),
		                            new JProperty("hearingCaseIdHMCTS", "5f2bffcee0b6aa870e82f007"),
		                            new JProperty("hearingSessionIdCaseHQ", "5f2bffceef36b0eaf339d884"),
		                            new JProperty("hearingTranslatorRequired", "No"),
		                            new JProperty("hearingCreatedDate", "2020-09-16"),
		                            new JProperty("hearingCreatedBy", "Donald Duck"),
		                            new JProperty("hearingVenueId", "V3455"),
		                            new JProperty("hearingRoomId", "R2345")
		                        );
		                        data.Add(recordOne);
		                        data.Add(recordTwo);
		                        return data.ToString();
		                    }</set-body>
		                </return-response>
		            </when>
		            <otherwise>
		            	<return-response>
		                	<set-status code="200" />
		                    <set-header name="Content-Type">
		    					<value>application/json</value>
							</set-header>
		                    <set-body>@{
		                        var data = new JArray();
		                        JObject recordOne = new JObject(
		                            new JProperty("listingRequestId", "5f2bffce29c77b6fef1e7488"),
		                            new JProperty("hearingIdCaseHQ", "5f2bffce29c77b6fef1e7499"),
		                            new JProperty("hearingType", "Traffic"),
		                            new JProperty("hearingDate", "2020-09-16"),
		                            new JProperty("hearingStartTime", "08:45"),
		                            new JProperty("hearingEndTime", "10:45"),
		                            new JProperty("hearingCaseIdHMCTS", "5f2bffcee0b6aa870e82f007"),
		                            new JProperty("hearingSessionIdCaseHQ", "5f2bffceef36b0eaf339d884"),
		                            new JProperty("hearingTranslatorRequired", "No"),
		                            new JProperty("hearingCreatedDate", "2020-09-16"),
		                            new JProperty("hearingCreatedBy", "Donald Duck"),
		                            new JProperty("hearingVenueId", "V3455"),
		                            new JProperty("hearingRoomId", "R2345")
		                        );
		                        JObject recordTwo = new JObject(
		                            new JProperty("listingRequestId", "5f2bffce29c77b6fef1e7488"),
		                            new JProperty("hearingIdCaseHQ", "5f2bffce29c77b6fef1e7777"),
		                            new JProperty("hearingType", "Traffic"),
		                            new JProperty("hearingDate", "2020-09-16"),
		                            new JProperty("hearingStartTime", "08:45"),
		                            new JProperty("hearingEndTime", "10:45"),
		                            new JProperty("hearingCaseIdHMCTS", "5f2bffcee0b6aa870e82f007"),
		                            new JProperty("hearingSessionIdCaseHQ", "5f2bffceef36b0eaf339d884"),
		                            new JProperty("hearingTranslatorRequired", "No"),
		                            new JProperty("hearingCreatedDate", "2020-09-16"),
		                            new JProperty("hearingCreatedBy", "Donald Duck"),
		                            new JProperty("hearingVenueId", "V3455"),
		                            new JProperty("hearingRoomId", "R2345")
		                        );
		                        data.Add(recordOne);
		                        data.Add(recordTwo);
		                        return data.ToString();
		                    }</set-body>
		                </return-response>
		            </otherwise>
		        </choose>
                </when>
			</choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>