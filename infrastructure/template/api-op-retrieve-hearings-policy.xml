<policies>
    <inbound>
        <base />
        <set-variable name="invalidQueryParams" value="@{
                string[] qryPrmKeys = context.Request.Url.Query.Keys.ToArray();
                string[] allowedKeys = {"hearingIdCaseHQ","hearingDate","hearingType"};
                bool invalidQueryParam = false;
                if(context.Request.Url.Query.Count &gt; 0){
                    for (int i = 0; i &lt; qryPrmKeys.Count(); i++)
                    {
                        bool keyFound = false;
                        for (int j = 0; j &lt; allowedKeys.Count(); j++)
                        {
                            if (qryPrmKeys[i] == allowedKeys[j]){
                                keyFound = true;
                                break;
                            }
                        }
                        if(!keyFound){
                            invalidQueryParam = true;
                            break;
                        }
                    }
                }

                return invalidQueryParam;
            }" />
            <choose>
                <when condition="@(context.Request.Url.Query.Count > 3 || (bool)context.Variables["invalidQueryParams"])">
                    <return-response>
                        <set-status code="400" reason="Malformed request." />
                        <set-body>@{
                            return new JObject(
                            new JProperty("statusCode", 400),
                            new JProperty("message", "Invalid query parameter/s in the request URL.")
                            ).ToString();
                            }</set-body>
                    </return-response>
                </when>
            </choose>
            <choose>
				<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "CFT")">
					<rewrite-uri template="/retrieve-hearing" copy-unmatched-params="true" />
					<set-backend-service base-url="http://#{hostName}#/hearings/" />
				</when>
			</choose>
			<choose>
				<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "S&L")">
					<rewrite-uri template="/retrieve-hearing" copy-unmatched-params="true" />
					<set-backend-service base-url="http://#{hostName}#/hearings/" />
				</when>
			</choose>
			<choose>
				<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "CRIME")">
					<rewrite-uri template="/retrieve-hearing" copy-unmatched-params="true" />
					<set-backend-service base-url="http://#{hostName}#/hearings/" />
				</when>
			</choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>