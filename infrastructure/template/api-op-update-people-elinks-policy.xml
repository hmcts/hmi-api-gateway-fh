<policies>
    <inbound>
        <base />
        <choose>
            <when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "ELINKS")">
                <send-request ignore-error="false" timeout="20" response-variable-name="elinksTokenResponse" mode="new">
                    <set-url>https://#{keyVaultHost}#/secrets/elinks-token/?api-version=7.0</set-url>
                    <set-method>GET</set-method>
                    <authentication-managed-identity resource="https://vault.azure.net" />
                </send-request>
                <set-variable name="elinksToken" value="@{
                    var secret = ((IResponse)context.Variables["elinksTokenResponse"]).Body.As<JObject>();
                    return secret["value"].ToString();
                }" />
                <set-header name="Authorization" exists-action="override">
                    <value>@("Bearer " + (String)context.Variables["elinksToken"])</value>
                </set-header>
                <rewrite-uri template="/people/{id}" copy-unmatched-params="true" />
                <set-backend-service base-url="https://#{elinksHost}#/api/v4" />
            </when>
            <when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "MOCK")">
                <set-backend-service base-url="https://#{elinksHost}#/api" />
                <mock-response status-code="204" content-type="application/json" />
            </when>
    <when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "SNL")">
    <set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
    <return-response>
        <set-status code="400" />
        <set-header name="Content-Type">
            <value>application/json</value>
        </set-header>
        <set-body>@{
            return new JObject(
            new JProperty("message", "SNL doesn't support this functionality")
            ).ToString();
            }
        </set-body>
    </return-response>
</when>
<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "CFT")">
<set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
<return-response>
<set-status code="400" />
<set-header name="Content-Type">
    <value>application/json</value>
</set-header>
<set-body>@{
    return new JObject(
    new JProperty("message", "CFT doesn't support this functionality")
    ).ToString();
    }
</set-body>
</return-response>
        </when>
<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "CRIME")">
<set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
<return-response>
<set-status code="400" />
<set-header name="Content-Type">
    <value>application/json</value>
</set-header>
<set-body>@{
    return new JObject(
    new JProperty("message", "CRIME doesn't support this functionality")
    ).ToString();
    }
</set-body>
</return-response>
        </when>
<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "RM")">
<set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
<return-response>
<set-status code="400" />
<set-header name="Content-Type">
    <value>application/json</value>
</set-header>
<set-body>@{
    return new JObject(
    new JProperty("message", "RM doesn't support this functionality")
    ).ToString();
    }
</set-body>
</return-response>
        </when>
<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "PIH")">
<set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
<return-response>
<set-status code="400" />
<set-header name="Content-Type">
    <value>application/json</value>
</set-header>
<set-body>@{
    return new JObject(
    new JProperty("message", "PIH doesn't support this functionality")
    ).ToString();
    }
</set-body>
</return-response>
        </when>
<when condition="@(context.Request.Headers.GetValueOrDefault("Destination-System","") == "HMI-DTU")">
<set-backend-service base-url="https://vh-bookings-api-dev.azurewebsites.net/hearings/update" />
<return-response>
<set-status code="400" />
<set-header name="Content-Type">
    <value>application/json</value>
</set-header>
<set-body>@{
    return new JObject(
    new JProperty("message", "HMI-DTU doesn't support this functionality")
    ).ToString();
    }
</set-body>
</return-response>
        </when>
        </choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>