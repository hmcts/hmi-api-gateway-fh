parameters:
  - name: subscription
    type: string

  - name: resourceGroup
    type: string

  - name: dependsOn
    type: object
  
  - name: displayName
    type: string

  - name: environment
    type: string
  
  - name: hostName
    type: string
  
  - name: hostNameType
    type: string
    default: "Proxy"

  - name: variables
    type: object

jobs:
- job: ApplyHostName
  dependsOn:
  - ${{ if parameters.dependsOn }}:
    - ${{ parameters.dependsOn }}
  displayName: ${{ parameters.displayName }}
  pool:
    vmImage: 'windows-latest'
  variables:
    ${{ insert }}: ${{ parameters.variables }}
  steps:
  # - bash: |
  #     pwsh -ExecutionPolicy Unrestricted -File "$(System.DefaultWorkingDirectory)/script/apply_custom_domain.ps1" -Hostname ${{ parameters.hostname }} -HostnameType ${{ parameters.hostNameType }} -KeyVaultName "hmi-shared-kv-${{ parameters.environment }}" -ResourceGroupName $(resourceGroup) -Tenant $(tenant_id)
  - task: AzurePowerShell@5
    inputs:
      azureSubscription: 'DTS-SHAREDSERVICES-ACR-SBOX'
      ScriptType: 'InlineScript'
      Inline: |
        $HostnameType = ${{ parameters.hostNameType }} 
        $KeyVaultName = "hmi-shared-kv-${{ parameters.environment }}" 
        $ResourceGroupName = $(resourceGroup) 
        $Tenant = $(tenant_id)

        if (!(Get-Module -Name Az.ApiManagement)){
            Write-Host "Installing Az.ApiManagement Module..." -ForegroundColor Yellow
            Install-Module -Name Az.ApiManagement -Force -Verbose
            Write-Host "Az.ApiManagement Module successfully installed..."
          } else {
            Write-Host "Az.ApiManagement already installed, skipping" -ForegroundColor Green
          }
        $KeyVaultId = "https://$KeyVaultName.vault.azure.net/secrets/apim-hostname-certificate"
        $proxy = (New-AzApiManagementCustomHostnameConfiguration -Hostname $Hostname -HostnameType $HostnameType -KeyVaultId $KeyVaultId -DefaultSslBinding)
        $apim = (Get-AzApiManagement -ResourceGroupName $ResourceGroupName)
        if ($apim.ProxyCustomHostnameConfiguration.Hostname -notcontains $proxy.Hostname) {
            $apim.ProxyCustomHostnameConfiguration = $proxy
            Write-Host "Applying Custom Domain configuration..." $proxy.Hostname -ForegroundColor Yellow
            Set-AzApiManagement -InputObject $apim -SystemAssignedIdentity -Confirm:$false
            Write-Host "Custom domain successfully applied..."
            Write-Host "Listing custom domains..."
            $apim = Get-AzApiManagement -ResourceGroupName $ResourceGroupName
            foreach ($_ in $apim.ProxyCustomHostnameConfiguration.Hostname) {
                Write-Host $_
            }
        } else {
            Write-Host "Listing custom domains..."
            foreach ($_ in $apim.ProxyCustomHostnameConfiguration.Hostname) {
                Write-Host $_
            }
            Write-Host "Custom domain already applied, skipping..." -ForegroundColor Green
        }

      FailOnStandardError: true
      azurePowerShellVersion: 'LatestVersion'