parameters:
  - name: dependsOn
    type: object
    default: ''

  - name: displayName
    type: string
 
  - name: subscription
    type: string

  - name: environmentName
    type: string

jobs:
- job: createRotaStorage
  dependsOn:
  - ${{ if parameters.dependsOn }}:
    - ${{ parameters.dependsOn }}
  displayName: ${{ parameters.displayName }}
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: AzureCLI@2
    displayName: Create ROTA Blob
    name: createRotaContainer
    inputs:
      azureSubscription: ${{ parameters.subscription }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        echo "Creating ROTA storage account for $(environment)"
        accountName="hmidtu$(environment)"
        resourceGroup="hmi-sharedinfra-$(environment)-rg"
        kvName="hmi-shared-kv-$(environment)"

        tags="businessArea=cross-cutting application=hearing-management-interface builtFrom=hmcts/hmi-api-gateway-fh environment=${{ parameters.environmentName }}"

        az storage account create -n $accountName -g $resourceGroup -l "uksouth" --sku Standard_LRS --kind StorageV2 --tags $tags
        echo "Acquiring storage key"
        key=$(az storage account keys list -g $resourceGroup --account-name $accountName --query "[0].value" -o tsv)
        echo "##vso[task.setvariable variable=storageKey;issecret=true;]$key"
        echo "Creating containers..."
        az storage container create --name "rota" --account-name $accountName --account-key $key
        az storage container create --name "sitting-pattern" --account-name $accountName --account-key $key
        az storage container create --name "listing-data-export" --account-name $accountName --account-key $key
        echo "- rota"
        echo "Updating Key Vault $kvName"
        az keyvault secret set --name "dtu-storage-account-key" --value $key --vault-name $kvName
        echo "Creating containers complete."