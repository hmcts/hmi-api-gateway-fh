parameters:
  - name: displayName
    type: string

  - name: dependsOn
    type: object

  - name: subscription
    type: string

  - name: resourceGroup
    type: string

  - name: storageAccount
    type: string

  - name: storageContainer
    type: string

  - name: subscriptionKey
    type: string

  - name: apimHost
    type: string

  - name: command
    type: string

  - name: logLevel
    type: string

  - name: variables
    type: object

jobs:
- job: ${{ parameters.displayName }}
  dependsOn:
  - ${{ if parameters.dependsOn }}:
    - ${{ parameters.dependsOn }}
  displayName: ${{ parameters.displayName }}
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    ${{ insert }}: ${{ parameters.variables }}
  steps:
  - template: ../steps/run-gradlew.yaml
    parameters:
      command: ${{ parameters.command }} -DENDPOINT_SUBSCRIPTION_KEY=$(subscriptionKey) -DENDPOINT_URL=https://${{ parameters.apimHost }} -DENDPOINT_HOST=${{ parameters.apimHost }} -DMOCK_SERVER_HOST=localhost -DMOCK_SERVER_PORT=80 -DAPI_LOG_LEVEL=${{ parameters.logLevel }}
  - ${{ if contains(parameters.command, 'unit') }}:
    - template: ../steps/zip-test-results.yaml
      parameters:
        zipName: ${{ parameters.displayName }}_unittest
        directory: /build/reports/unittests
  - ${{ if contains(parameters.command, 'functional') }}:
    - template: ../steps/zip-test-results.yaml
      parameters:
        zipName: ${{ parameters.displayName }}_serenity
        directory: /target/site/serenity
  - template: ../steps/zip-test-results.yaml
    parameters:
      zipName: ${{ parameters.displayName }}_gradle
      directory: /build/reports/tests/${{ parameters.command }}
  - template: ../steps/publish-test-results.yaml
    parameters:
      zipName: ${{ parameters.displayName }}
      subscription: ${{ parameters.subscription }}
      resourceGroup: $(resourceGroup)
      storageAccount: $(storageAccount)
      storageContainer: $(storageContainer)
