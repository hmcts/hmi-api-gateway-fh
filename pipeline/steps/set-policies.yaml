parameters:
  - name: subscription
    type: string
    
steps:
- task: AzurePowerShell@5
  displayName: Apply Policies to APIM API
  inputs:
    azureSubscription: ${{ parameters.subscription }}
    ScriptType: 'InlineScript'
    Inline: |
      $apimContext = New-AzApiManagementContext -ResourceGroupName $(resourceGroup) -ServiceName "hmi-apim-svc-$(environment)"
      $policies = (Get-Content $(System.DefaultWorkingDirectory)\infrastructure\template\policies.json -Raw | ConvertFrom-Json).policies
      foreach ($_ in $policies) {
        $format = $_.format
        $operationId = $_.operationId
        $file = $_.templateFile
        Write-Host "Applying $operationId"
        (Get-Content -Path $(System.DefaultWorkingDirectory)\infrastructure\template\$file) |
          ForEach-Object {[System.Web.HttpUtility]::HtmlDecode($_)} |
        Set-Content -Path $(System.DefaultWorkingDirectory)\infrastructure\template\$file
        Write-Host "After Conversion"
        Get-Content $(System.DefaultWorkingDirectory)\infrastructure\template\$file
        Set-AzApiManagementPolicy -Context $apimContext -ApiId "hmi-apim-api" -Format $format -OperationId $operationId -PolicyFilePath $(System.DefaultWorkingDirectory)\infrastructure\template\$file -Verbose -ErrorAction Stop
      }
      Write-Host "Applying Product policy"
      Set-AzApiManagementPolicy -Context $apimContext -ProductId "hmi-apim-product-$(environment)" -Format "application/vnd.ms-azure-apim.policy.raw+xml" -PolicyFilePath $(System.DefaultWorkingDirectory)\infrastructure\template\hmi-product-policy.xml -Verbose -ErrorAction Stop
    azurePowerShellVersion: 'LatestVersion'
