parameters:
  - name: subscription
    type: string

steps:

- task: AzurePowerShell@5
  displayName: Run tests
  inputs:
    azureSubscription: ${{ parameters.subscription }}
    ScriptType: 'InlineScript'
    Inline: |
      $RootPath = Split-Path -Parent $MyInvocation.MyCommand.Path | Split-Path
      $TfFiles = @(@((Get-ChildItem $RootPath -filter '*.tf' -Recurse)))
        ((($TfFiles).DirectoryName | Select-Object -Unique)).ForEach{
          terraform fmt -check=true $Instance
        }
      Install-Module -Name Pester -MaximumVersion 4.99.99 -Force -Verbose -Scope CurrentUser
      Invoke-Pester $(System.DefaultWorkingDirectory)/script -OutputFormat NUnitXml -OutputFile ./TEST-CI.xml -EnableExit
    azurePowerShellVersion: 'LatestVersion'

- task: PublishTestResults@2
  displayName: "Publish Test Results **/TEST-*.xml"
  inputs:
    testResultsFormat: NUnit
    failTaskOnFailedTests: true
  condition: always()
